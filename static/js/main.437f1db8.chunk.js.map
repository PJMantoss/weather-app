{"version":3,"sources":["App.js","index.js"],"names":["api","App","useState","query","setQuery","weather","setWeather","className","main","temp","type","placeholder","onChange","e","target","value","onKeyPress","key","fetch","then","res","json","result","console","log","name","sys","country","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","Math","round","id","src","alt","href","rel","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAGMA,G,MACC,oCADDA,EAEE,2CA2FOC,MAxFf,WAAgB,IAAD,EAEaC,mBAAS,IAFtB,mBAENC,EAFM,KAECC,EAFD,OAGiBF,mBAAS,IAH1B,mBAGNG,EAHM,KAGGC,EAHH,KAmDb,OACE,yBAAKC,UAAmC,oBAAhBF,EAAQG,MAAyBH,EAAQG,KAAKC,KAAO,GAAM,WAAsB,OACvG,8BACE,yBAAKF,UAAU,cACb,2BACIA,UAAU,aACVG,KAAK,OACLC,YAAY,kBACZC,SAAU,SAAAC,GAAC,OAAIT,EAASS,EAAEC,OAAOC,QACjCA,MAAOZ,EACPa,WAxDG,SAAAH,GACC,UAAVA,EAAEI,KACJC,MAAM,GAAD,OAAIlB,EAAJ,qBAAyBG,EAAzB,+BAAqDH,IACzDmB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJhB,EAAWgB,GACXlB,EAAS,IACTmB,QAAQC,IAAIF,UAqDa,oBAAhBjB,EAAQG,KACf,6BACE,yBAAKD,UAAU,gBACb,yBAAKA,UAAU,YAAYF,EAAQoB,KAAnC,KAA2CpB,EAAQqB,IAAIC,SACvD,yBAAKpB,UAAU,QApDP,SAAAqB,GAClB,IAyBIC,EAVO,CACP,SACA,SACA,UACA,YACA,WACA,SACA,YAGWD,EAAEE,UACbC,EAAOH,EAAEI,UACTC,EA3BS,CACT,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAeeL,EAAEM,YACjBC,EAAOP,EAAEQ,cAEb,MAAM,GAAN,OAAUP,EAAV,YAAiBE,EAAjB,YAAyBE,EAAzB,YAAkCE,GAqBDE,CAAY,IAAIC,QAGzC,yBAAK/B,UAAU,eACX,yBAAKA,UAAU,QAAQgC,KAAKC,MAAMnC,EAAQG,KAAKC,MAA/C,SACA,yBAAKF,UAAU,WAAf,IAA2BF,EAAQA,QAAQ,GAAGG,KAA9C,OAGH,GACL,yBAAKiC,GAAG,QACJ,2CACA,yBAAKC,IAAI,iDAAiDC,IAAI,SAC9D,oCAAS,uBAAGC,KAAK,+BAA+B9B,OAAO,SAAS+B,IAAI,uBAA3D,gBCnFrBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.437f1db8.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst api = {\n  key: \"2d174703d6e4d8d4645eeba543dbd48c\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\n\nfunction App() {\n\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const search = e => {\n    if (e.key === 'Enter'){\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n      .then(res => res.json())\n      .then(result => {\n        setWeather(result);\n        setQuery('');\n        console.log(result);\n      });\n    }\n  }\n\n  const dateBuilder = d => {\n    let months = [\n        \"January\", \n        \"February\", \n        \"March\", \n        \"April\", \n        \"May\", \n        \"June\", \n        \"July\", \n        \"August\", \n        \"September\", \n        \"October\", \n        \"November\", \n        \"December\"\n    ];\n  \n    let days = [\n        \"Sunday\", \n        \"Monday\", \n        \"Tuesday\", \n        \"Wednesday\", \n        \"Thursday\", \n        \"Friday\", \n        \"Saturday\"\n    ];\n  \n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    \n    return `${day} ${date} ${month} ${year}`;\n  }\n\n  return (\n    <div className={(typeof weather.main != 'undefined') ? ((weather.main.temp > 16) ? 'app warm' : 'app') : 'app'}>\n      <main>\n        <div className=\"search-box\">\n          <input \n              className=\"search-bar\" \n              type=\"text\" \n              placeholder=\"Enter a city...\" \n              onChange={e => setQuery(e.target.value)}\n              value={query}\n              onKeyPress={search}\n          />\n        </div>\n\n        {(typeof weather.main != \"undefined\") ? (\n          <div>\n            <div className=\"location-box\">\n              <div className=\"location\">{weather.name}, {weather.sys.country}</div>\n              <div className=\"date\">{dateBuilder(new Date())}</div>\n            </div>\n\n            <div className=\"weather-box\">\n                <div className=\"temp\">{Math.round(weather.main.temp)}Â°c</div>\n                <div className=\"weather\"> {weather.weather[0].main} </div>\n            </div>\n          </div>\n        ) : ('')}\n        <div id=\"love\">\n            <span>Made With</span>\n            <img src=\"https://img.icons8.com/dusk/64/000000/like.png\" alt=\"love\"/> \n            <span>by <a href=\"https://github.com/PJMantoss\" target=\"_blank\" rel=\"noopener noreferrer\">Mantoss</a></span>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}